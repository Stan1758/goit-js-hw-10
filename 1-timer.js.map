{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst startButton = document.querySelector(\"[data-start]\");\nconst datetimeInput = document.querySelector(\"#datetime-picker\");\nconst daysElement = document.querySelector(\"[data-days]\");\nconst hoursElement = document.querySelector(\"[data-hours]\");\nconst minutesElement = document.querySelector(\"[data-minutes]\");\nconst secondsElement = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate;\nlet timerId = null;\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n//   dateFormat: \"Y-m-d H:i\",\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (!userSelectedDate || userSelectedDate <= new Date()) {\n      iziToast.error({\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimeInput, options);\n\nstartButton.addEventListener(\"click\", () => {\n  if (!userSelectedDate) return;\n\n  startButton.disabled = true;\n  datetimeInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      datetimeInput.disabled = false;\n      return;\n    }\n\n    updateTimer(delta);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const time = convertMs(ms);\n  const timeElements = {\n    days: daysElement,\n    hours: hoursElement,\n    minutes: minutesElement,\n    seconds: secondsElement,\n  };\n\n  for (const key in timeElements) {\n    timeElements[key].textContent = addLeadingZero(time[key]);\n  }\n}\n\n\n"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startButton","datetimeInput","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","delta","updateTimer","time","timeElements","key"],"mappings":"yIAKA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EACAC,EAAU,KACdP,EAAY,SAAW,GAEvB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9B,CAACH,GAAoBA,GAAoB,IAAI,MAC/CI,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAW,EAAUV,EAAeO,CAAO,EAEhCR,EAAY,iBAAiB,QAAS,IAAM,CACrCM,IAELN,EAAY,SAAW,GACvBC,EAAc,SAAW,GAEzBM,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAQN,EADF,IAAI,KAGhB,GAAIM,GAAS,EAAG,CACd,cAAcL,CAAO,EACrBM,EAAY,CAAC,EACbZ,EAAc,SAAW,GACzB,MACD,CAEDY,EAAYD,CAAK,CAClB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYpB,EAAI,CACvB,MAAMqB,EAAOtB,EAAUC,CAAE,EACnBsB,EAAe,CACnB,KAAMb,EACN,MAAOC,EACP,QAASC,EACT,QAASC,CACb,EAEE,UAAWW,KAAOD,EAChBA,EAAaC,CAAG,EAAE,YAAclB,EAAegB,EAAKE,CAAG,CAAC,CAE5D"}